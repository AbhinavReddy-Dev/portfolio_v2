---
// Click button, get confetti!
// Styled by Tailwind :)
// https://3dtransforms.desandro.com/carousel
---

<!-- auto-rotate
        camera-controls
        ar -->
<>
  <div id="aSide">
    <model-viewer
      src="../../../public/avatar.glb"
      alt="Avatar"
      ios-src="../../../public/avatar.glb">
    </model-viewer>
  </div>

  <div class="scene">
    <div class="carousel">
      <div class="carousel__cell">Work</div>
      <div class="carousel__cell">Skills</div>
      <div class="carousel__cell">Projects</div>
      <div class="carousel__cell">Blogs</div>
      <div class="carousel__cell">Resources</div>
      <div class="carousel__cell">Resume</div>
    </div>
  </div>

  <div class="carousel-options">
    <p>
      <button class="previous-button">Previous</button>
      <button class="next-button">Next</button>
    </p>
  </div>
</>

<script>
  var cellCount = 6; // cellCount set from cells-range input value
  var selectedIndex = 0;
  var rotateFn = "rotateY";
  var radius: number, theta: number;
  var carousel = document.querySelector<HTMLDivElement>(".carousel");
  var cells = carousel.querySelectorAll<HTMLDivElement>(".carousel__cell");
  cells.forEach((ele, index) => {
    ele.addEventListener("click", function (e) {});
  });
  var cellWidth = carousel.offsetWidth;

  function rotateCarousel() {
    var angle = theta * selectedIndex * -1;
    carousel.style.transform =
      "translateZ(" + -radius + "px) " + rotateFn + "(" + angle + "deg)";
  }

  function prevCard() {
    selectedIndex--;
    //   console.log(selectedIndex);
    rotateCarousel();
  }
  function nextCard() {
    selectedIndex++;
    //   console.log(selectedIndex);
    rotateCarousel();
  }

  var prevButton =
    document.querySelector<HTMLButtonElement>(".previous-button");
  prevButton.addEventListener("click", prevCard);

  var nextButton = document.querySelector<HTMLButtonElement>(".next-button");
  nextButton.addEventListener("click", nextCard);

  function changeCarousel() {
    theta = 360 / cellCount;
    var cellSize = cellWidth;
    // radius = Math.round( ( cellSize / 2) / Math.tan( Math.PI / cellCount ) );
    radius = 484;
    for (var i = 0; i < cells.length; i++) {
      var cell = cells[i];
      if (i < cellCount) {
        // visible cell
        cell.style.opacity = "1";
        var cellAngle = theta * i;
        cell.style.transform =
          rotateFn + "(" + cellAngle + "deg) translateZ(" + radius + "px)";
      } else {
        // hidden cell
        cell.style.opacity = "0";
        cell.style.transform = "none";
      }
    }

    rotateCarousel();
  }
  window.onwheel = function (e) {
    if (e.deltaY > 0) {
      // down
      nextCard();
    } else {
      // up
      prevCard();
    }
  };

  changeCarousel();
</script>
<!-- Loads model-viewer for modern browsers -->
<script
  type="module"
  src="https://unpkg.com/@google/model-viewer/dist/model-viewer.js"
></script>
<!-- Loads model-viewer for older browsers -->
<script
  nomodule
  src="https://unpkg.com/@google/model-viewer/dist/model-viewer-legacy.js"
></script>
<style>
  /* This styles the aside container */

  #aSide {
    height: 600px;
    width: 600px;
    /* height: 100%;
    width: 100%; */
    position: relative;
    /* top: 100px; */
    transform: translateZ(484px);
    left: 25%;
    /* transform: translateX(50%, -50%); */
    /* right: 7%; */
  }

  /* This styles the 3D object inserted in the aside container */

  #aSide model-viewer {
    height: 600px;
    width: 600px;
    position: absolute;
    top: 0;
    left: 0;
    border: none;
  }

  .scene {
    /* border: 1px solid #ccc; */
    margin: 50px 0;
    position: relative;
    width: 210px;
    height: 140px;
    margin: 0px auto;
    perspective: 1000px;
    /* background-color: white; */
  }

  .carousel {
    width: 100%;
    height: 100%;
    position: absolute;
    transform: translateZ(-484px);
    transform-style: preserve-3d;
    transition: transform 1s;
  }

  .carousel__cell {
    position: absolute;
    width: 210px;
    height: 210px;
    border-radius: 150px;
    /* left: 10px; */
    /* top: 10px; */
    border: 2px solid black;
    line-height: 116px;
    font-size: 18px;
    font-weight: bold;
    color: white;
    text-align: center;
    transition: transform 1s, opacity 1s;
  }

  .carousel__cell:nth-child(9n + 1) {
    background: hsla(0, 100%, 50%, 1);
  }
  .carousel__cell:nth-child(9n + 2) {
    background: hsla(60, 100%, 50%, 1);
  }
  .carousel__cell:nth-child(9n + 3) {
    background: hsla(120, 100%, 50%, 1);
  }
  .carousel__cell:nth-child(9n + 4) {
    background: hsla(180, 100%, 50%, 1);
  }
  .carousel__cell:nth-child(9n + 5) {
    background: hsla(240, 100%, 50%, 1);
  }
  .carousel__cell:nth-child(9n + 6) {
    background: hsla(300, 100%, 50%, 1);
  }
  /* .carousel__cell:nth-child(9n+7) { background: hsla(300, 100%, 50%, 1); } */
  /* .carousel__cell:nth-child(9n+8) { background: hsla(280, 100%, 50%, 1); }
.carousel__cell:nth-child(9n+0) { background: hsla(320, 100%, 50%, 1); } */

  .carousel__cell:nth-child(1) {
    transform: rotateY(0deg) translateZ(484px);
  }
  .carousel__cell:nth-child(2) {
    transform: rotateY(60deg) translateZ(484px);
  }
  .carousel__cell:nth-child(3) {
    transform: rotateY(120deg) translateZ(484px);
  }
  .carousel__cell:nth-child(4) {
    transform: rotateY(180deg) translateZ(484px);
  }
  .carousel__cell:nth-child(5) {
    transform: rotateY(240deg) translateZ(484px);
  }
  .carousel__cell:nth-child(6) {
    transform: rotateY(300deg) translateZ(484px);
  }
  /* .carousel__cell:nth-child(7) { transform: rotateY(240deg) translateZ(288px); }
.carousel__cell:nth-child(8) { transform: rotateY(280deg) translateZ(288px); }
.carousel__cell:nth-child(9) { transform: rotateY(320deg) translateZ(288px); } */

  .carousel-options {
    text-align: center;
    position: relative;
    z-index: 2;
    background: hsla(0, 0%, 100%, 1);
    margin: 40px 0px;
  }
</style>
